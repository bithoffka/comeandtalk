from sqlite3 import *
from catid_generator import *
from datetime import *

fully_student = 1
just_got_in_by_tgshchcka = 2

class_id_map = {
"id1110": ["–î–µ—Ç—Å–∫–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"],
"id1120": ["–î–µ—Ç—Å–∫–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–õ–æ–≥–æ–ø–µ–¥"],
"id1130": ["–î–µ—Ç—Å–∫–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ"],
"id1210": ["–î–µ—Ç—Å–∫–æ–µ", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", "–•–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è"],
"id1310": ["–î–µ—Ç—Å–∫–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–†–∞–∑–≤–∏—Ç–∏–µ"],
"id2110": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∫–æ–ª–µ"],
"id2120": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞"],
"id2130": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –û–ì–≠/–ï–ì–≠/–í–ü–†"],
"id2140": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"],
"id2150": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ê—Ä–º—è–Ω—Å–∫–∏–π —è–∑—ã–∫"],
"id2160": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫"],
"id2210": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", "–•–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è"],
"id2220": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", "–•–∏–ø-–•–æ–ø"],
"id2230": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", "–ö–∞—Ä–∞—Ç–µ"],
"id2310": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–†–∏—Å–æ–≤–∞–Ω–∏–µ"],
"id2320": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–ê–∫—Ç–µ—Ä—Å–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ"],
"id2330": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–ò—Å—Å–∫—É—Å—Ç–≤–æ–≤–µ–¥–µ–Ω–∏–µ"],
"id2340": ["–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–•–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è"],
"id3110": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫"],
"id3120": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ê—Ä–º—è–Ω—Å–∫–∏–π —è–∑—ã–∫"],
"id3130": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–ò—Å–ø–∞–Ω—Å–∫–∏–π —è–∑—ã–∫"],
"id3140": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–ò–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ", "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π —è–∑—ã–∫"],
"id3210": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", "–ô–æ–≥–∞"],
"id3220": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ", "–§–∏—Ç–Ω–µ—Å"],
"id3310": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–û—Ä–∞—Ç–æ—Ä—Å–∫–æ–µ –∏—Å–∫—É—Å—Ç–≤–æ"],
"id3320": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–ê–∫—Ç–µ—Ä—Å–∫–æ–µ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ"],
"id3330": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–†–∏—Å–æ–≤–∞–Ω–∏–µ"],
"id3340": ["–í–∑—Ä–æ—Å–ª–æ–µ", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–•–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è"]
}


def getPersonInfo(TID):
    data_from_db = getPersonInfoFromcatiddb(TID, 0)
    amount_of_returned_lists =  data_from_db["amount_of_returned_lists"]

    current_month = datetime.now().strftime("%m.%Y")
    result_messages = []

    if amount_of_returned_lists == 1:
        try:
            classID = ', '.join(class_id_map.get(data_from_db["classID"]))
        except TypeError as e:
            classID = "–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è :/"
            print(e)
            print("–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ class_id –≤ db = None")
        print(classID)
        result_messages.append(f"""
–í–∞—à —Å—Ç–∞—Ç—É—Å –Ω–∞ {current_month}:
    \t–ò–º—è: {data_from_db["name"]}
    \t–ù–∞–ø—Ä–≤–ª–µ–Ω–∏–µ: {classID}
    \t–û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {data_from_db["paid_lessons"]}
    \t—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {data_from_db["missed_lessons"]}
""")
    else:
        for i in range(amount_of_returned_lists):
            data_from_db = getPersonInfoFromcatiddb(TID, i)
            try:
                classID = ', '.join(class_id_map.get(data_from_db["classID"]))
            except TypeError as e:
                classID = "–í—ã –µ—â–µ –Ω–µ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è :/"
                print(e)
                print("–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ class_id –≤ db = None")
            reply_message = f"""
\t–ò–º—è: {data_from_db["name"]}
\t–ù–∞–ø—Ä–≤–ª–µ–Ω–∏–µ: {classID}
\t–û–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {data_from_db["paid_lessons"]}
\t–ü—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤: {data_from_db["missed_lessons"]}
"""
            result_messages.append(reply_message)

    result_text = "üì∞–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Çüì∞\n\n–í–∞—à —Å—Ç–∞—Ç—É—Å –Ω–∞ 02.2024:\n"
    result_text += result_messages[0]

    for message in result_messages[1:]:
        result_text += "\n" + message

    return result_text


def CreteMonthlyTable():
    with connect("MAIN_db.db") as con:
        cur = con.cursor()

        cur.execute(f"""
        CREATE TABLE IF NOT EXISTS "catid_db_for_{datetime.now().strftime("%m%Y")}" (
	        "cat_id"	INTEGER NOT NULL UNIQUE,
	        "class_id"	TEXT,
            "TID"	INTEGER,                
	        "name"	TEXT,
	        "paid_lessons"	INTEGER DEFAULT 0,
	        "missed_lessons"	INTEGER DEFAULT 0,
	        "status"	INTEGER,
	        PRIMARY KEY("cat_id")
        )""")

        cur.execute(f"""SELECT * FROM catid_db_for_{(datetime.now().replace(day=1) - timedelta(days=1)).strftime("%m%Y")}
                    WHERE status = {int(fully_student)}
        """)
        data = cur.fetchall()
        cur.execute(f"""INSERT INTO catid_db_for_{datetime.now().strftime("%m%Y")} (cat_id, class_id, TID, name, paid_lessons, missed_lessons, status)
                    SELECT cat_id, class_id, TID, name, paid_lessons, missed_lessons, status 
                    FROM catid_db_for_{(datetime.now().replace(day=1) - timedelta(days=1)).strftime("%m%Y")}
                    WHERE status = {int(fully_student)}
        """)

#    con.execute("""CREATE TABLE IF NOT EXISTS tid_db (
#                tid INTEGER,
#                phone_number INTEGER,
#                full_name TEXT
#                cat_id TEXT,
#                cat_id1 TEXT,
#                cat_id2 TEXT,
#                cat_id3 TEXT,
#                cat_id4 TEXT,
#                cat_id5 TEXT,
#                cat_id6 TEXT,
#                cat_id7 TEXT,
#                cat_id8 TEXT,
#                cat_id9 TEXT,
#                cat_id10 TEXT,
#                cat_id11 TEXT,
#                cat_id12 TEXT,
#                cat_id13 TEXT,
#                cat_id14 TEXT,
#                cat_id15 TEXT,
#                cat_id16 TEXT,
#                cat_id17 TEXT,
#                cat_id18 TEXT,
#                cat_id19 TEXT,
#                cat_id20 TEXT,
#                cat_id21 TEXT,
#                cat_id22 TEXT,
#                cat_id23 TEXT,
#                cat_id24 TEXT,
#                cat_id25 TEXT,
#                cat_id26 TEXT,
#                cat_id27 TEXT,
#                cat_id28 TEXT,
#                cat_id29 TEXT,
#                cat_id30 TEXT,
#                cat_id31 TEXT,
#                cat_id32 TEXT,
#                cat_id33 TEXT,
#                cat_id34 TEXT,
#                cat_id35 TEXT,
#                cat_id36 TEXT,
#                cat_id37 TEXT,
#                cat_id38 TEXT,
#                cat_id39 TEXT,
#                cat_id40 TEXT,
#                cat_id41 TEXT,
#                cat_id42 TEXT,
#                cat_id43 TEXT,
#                cat_id44 TEXT,
#                cat_id45 TEXT,
#                cat_id46 TEXT,
#                cat_id47 TEXT,
#                cat_id48 TEXT,
#                cat_id49 TEXT,
#                cat_id50 TEXT,
#                cat_id51 TEXT,
#                cat_id52 TEXT,
#                cat_id53 TEXT,
#                cat_id54 TEXT,
#                cat_id55 TEXT,
#                cat_id56 TEXT,
#                cat_id57 TEXT,
#                cat_id58 TEXT,
#                cat_id59 TEXT,
#                cat_id60 TEXT,
#                cat_id61 TEXT,
#                cat_id62 TEXT,
#                cat_id63 TEXT,
#                cat_id64 TEXT
#                )""")